# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      - image: circleci/python:3.7.1

    ### TODO: uncomment
    #working_directory: ~/repo

    steps:
      - checkout
      - run: echo "A first hello from Circle CI"
      ### TODO: uncomment
      # Download and cache dependencies
      #- restore_cache:
      #    keys:
      #      - v1-dependencies-{{ checksum "Pipfile.lock" }}
      #      # fallback to using the latest cache if no exact match is found
      #      - v1-dependencies-

      ### TODO: uncomment
      #- run:
      #    name: install dependencies
      #    command: |
      #      python3 -m pip install pipenv
      #      pipenv install --dev

      #- save_cache:
      #    paths:
      #      - ./venv
      #    key: v1-dependencies-{{ checksum "requirements.txt" }}

      ### TODO: uncomment
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      #- run:
      #    name: run tests
      #    command: |
      #      pipenv shell --dev
      #      python -m pytest ./coverlovin2/test/

      #- store_artifacts:
      #    path: test-reports
      #    destination: test-reports