# Python CircleCI 2.1 configuration file
#
# environment variable CACHE_VERSION value is set at
# https://circleci.com/gh/jtmoon79/coverlovin2/edit#env-vars
#
---
version: 2.1
jobs:
  prep_workspace_cache:
    docker:
      # see https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/python:3.7.1
    steps:
      - checkout
      - run:
          command: |
            set -x

            echo -e "\n\n### record information about the shell context\n\n"
            pwd
            shopt
            env | sort
            uname -a
            ls -la
            which python
            python --version
            if which pipenv 2>/dev/null; then pipenv --version; fi

            echo -e "\n\n### prepare the jobs workspace\n\n"
            chmod -vR +x,-w -- ./tools/

            echo -e "\n\n### prepare the cache\n\n"
            python -m pip install --user --upgrade pip
            # pipenv is not available by default. Some amount of work has to be
            # done to
            # 1. install pipenv once
            # 2. install pipenv into the cache location
            # 3. save pipenv path via environment variable $PIPENV within a file
            # 4. save that file within the workspace
            # 5. later, source the file within the reloaded workspace
            # 6. call the pipenv at $PIPENV from the reloaded cache
            python -m pip install --user pipenv
            pipenv --version
            export PIPENV_CACHE_DIR=~/.pipenv-cache
            export PIPENV_VIRTUALENV=~/.pipenv-venv
            export WORKON_HOME=~/.pipenv-venv
            mkdir -vp -- "${PIPENV_CACHE_DIR}" "${PIPENV_VIRTUALENV}" "${WORKON_HOME}"
            SHELL_ENV=.shell-env
            echo -e 'export PIPENV_CACHE_DIR="'"${PIPENV_CACHE_DIR}"'"' >> "${SHELL_ENV}"
            echo -e 'export PIPENV_VIRTUALENV="'"${PIPENV_VIRTUALENV}"'"' >> "${SHELL_ENV}"
            echo -e 'export WORKON_HOME="'"${WORKON_HOME}"'"' >> "${SHELL_ENV}"
            # install all dependencies (which should include pipenv)
            pipenv install --dev
            # upgrade pipenv to latest within the virtualenv
            pipenv run pip install --upgrade pipenv
            export PIPENV=$(pipenv run which pipenv)
            echo -e 'export PIPENV="'"${PIPENV}"'"' >> "${SHELL_ENV}"
            # make really sure setuptools and wheel is the latest
            pipenv run pip install --upgrade setuptools wheel
            # double check before exiting
            cat -- "${SHELL_ENV}"
      - save_cache:
          name: cache of pipenv installs
          key: cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ arch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.pipenv
            - ~/.pipenv-venv
      - persist_to_workspace:
          root: ~/
          paths:
            - project
  test_python36:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ arch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            set -x
            SHELL_ENV=.shell-env
            source "${SHELL_ENV}"
            pwd && echo && env|sort
            "${PIPENV}" run tools/test-python36.sh
  test_pytest:
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ arch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            set -x
            SHELL_ENV=.shell-env
            source "${SHELL_ENV}"
            pwd
            "${PIPENV}" run pytest -vv coverlovin2/test
  build_pypi:
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: cache-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ arch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            set -x
            pwd
            SHELL_ENV=.shell-env
            source "${SHELL_ENV}"
            "${PIPENV}" run bash tools/build-install-test.sh
workflows:
  version: 2
  workflow_prep_test_build:
    jobs:
      - prep_workspace_cache
      - test_python36:
          requires:
            - prep_workspace_cache
      - test_pytest:
          requires:
            - prep_workspace_cache
      - build_pypi:
          requires:
            - prep_workspace_cache
            - test_python36
            - test_pytest
