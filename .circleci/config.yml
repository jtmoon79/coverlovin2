# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
---
version: 2.1
jobs:
  prep_workspace_cache:
    docker:
      # see https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/python:3.7.1
    steps:
      - checkout
      - run:
          command: |
            set -x
            echo "\n\n### record information about the shell context\n\n"
            pwd
            shopt
            env | sort
            uname -a
            ls -la
            echo "\n\n### prepare the jobs workspace\n\n"
            chmod -vR +x,-w -- ./tools/
            echo "\n\n### prepare the cache\n\n"
            python -m pip install --user --upgrade pip
            python -m pip install pipenv
            pipenv --version
            export PIPENV_CACHE_DIR=~/.pipenv
            mkdir -v -- "${PIPENV_CACHE_DIR}"
            pipenv install --dev
      - save_cache:
          name: cache of pipenv installs
          paths:
            - ~/.pipenv
          key: cache-{{ .Branch }}-{{ arch }}-{{ checksum "Pipfile.lock" }}
      - persist_to_workspace:
          root: ~/
          paths:
            - project
  test_python36:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: cache-{{ .Branch }}-{{ arch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            pwd
            export PIPENV_CACHE_DIR=~/.pipenv
            pipenv run tools/test-python36.sh
  test_pytest:
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: cache-{{ .Branch }}-{{ arch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            pwd
            export PIPENV_CACHE_DIR=~/.pipenv
            pipenv run python3 -m pytest -v coverlovin2/test
  build_pypi:
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: cache-{{ .Branch }}-{{ arch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            pwd
            export PIPENV_CACHE_DIR=~/.pipenv
            pipenv run pip install --upgrade setuptools wheel
            pipenv run bash tools/build-install-test.sh
workflows:
  version: 2
  workflow_prep_test_build:
    jobs:
      - prep_workspace_cache
      - test_python36:
          requires:
            - prep_cache
      - test_pytest:
          requires:
            - prep_cache
      - build_pypi:
          requires:
            - prep_cache
            - test_python36
            - test_pytest
